// js/alerts.js ‚Äî –°–∏–≥–Ω–∞–ª—ã —É–≥—Ä–æ–∑, —Ä–∞–∑–≤–µ–¥–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑

import { saveLog } from "./log.js";

export function checkAlerts() {
  const alerts = [];

  // –§–∏–∑–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
  const fit = JSON.parse(localStorage.getItem("fitLog") || "[]");
  if (fit.length === 0) alerts.push("‚ùå –ù–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.");

  // –ù–µ—Ç —Ü–µ–ª–µ–π
  const goals = document.querySelectorAll("#strategyList li");
  if (goals.length === 0) alerts.push("ü™ì –ö–∞—Ä—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—É—Å—Ç–∞.");

  // –í –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –≤—Ä–∞–≥–∏
  const people = JSON.parse(localStorage.getItem("people") || "[]");
  const enemies = people.filter(p => p.status === "red");
  if (enemies.length > 0) alerts.push("üî¥ –í –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –≤—Ä–∞–≥–∏.");

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ "—É—Å—Ç–∞–ª–æ—Å—Ç—å"
  const state = localStorage.getItem("userState");
  if (state === "tired") alerts.push("‚ö°Ô∏è –£—Å—Ç–∞–ª–æ—Å—Ç—å: —Å–Ω–∏–∑–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É –∏ –∏–∑–±–µ–≥–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.");

  // –í—ã–≤–æ–¥
  const alertList = document.getElementById("alertList");
  if (alertList) {
    alertList.innerHTML = "";
    alerts.forEach(msg => {
      const li = document.createElement("li");
      li.textContent = msg;
      li.style.color = "#f00";
      alertList.appendChild(li);
    });
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–≥
  alerts.forEach(msg => saveLog("‚ö†Ô∏è " + msg));
}

export function criticalReminderCheck() {
  const lastAction = localStorage.getItem("lastActionDate");
  const now = new Date().toLocaleDateString();

  if (lastAction !== now) {
    const diff = daysSince(lastAction);
    if (diff >= 3) {
      alert("‚ö†Ô∏è –®—Ç–∞–± –∑–∞–º–µ—á–∞–µ—Ç —Å–ª–∞–±–æ—Å—Ç—å. –ù–∞–∑–æ–≤–∏ —Ü–µ–ª—å –∏–ª–∏ –ø—Ä–∏–º–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è.");
      saveLog("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å " + diff + " –¥–Ω—è.");
    }
  }

  localStorage.setItem("lastActionDate", now);
}

function daysSince(dateStr) {
  if (!dateStr) return 99;
  const prev = new Date(dateStr);
  const now = new Date();
  return Math.floor((now - prev) / (1000 * 60 * 60 * 24));
}