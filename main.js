// üìú –ü—Ä–∞–≤–∏–ª–æ –¥–Ω—è const rules = [ "–ù–µ –æ–ø—Ä–∞–≤–¥—ã–≤–∞–π—Å—è ‚Äî –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî —Å–ª–∞–±–æ—Å—Ç—å.", "–ï—Å–ª–∏ –Ω–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–µ—Å—É—Ä—Å ‚Äî –æ—Ç—Å–µ–∫–∞–π.", "–•–∏—â–Ω–∏–∫ –º–æ–ª—á–∏—Ç —á–∞—â–µ, —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç.", "–ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Å–æ–±–æ–π ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º.", "–ö–∞–∂–¥–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ ‚Äî –≤–æ–π–Ω–∞ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å—ã.", "–ì—Ä—É–±–æ—Å—Ç—å ‚Äî —Ñ–∏–ª—å—Ç—Ä. –ö—Ç–æ —Å–ª–∞–± ‚Äî –æ—Ç–ø–∞–¥—ë—Ç —Å–∞–º.", "–°–Ω–∞—á–∞–ª–∞ –¥–æ–º–∏–Ω–∏—Ä—É–π, –ø–æ—Ç–æ–º –¥—Ä—É–∂–∏.", "–ï—Å–ª–∏ –Ω–µ –¥–∞–≤—è—Ç –Ω–∞ —Ç–µ–±—è ‚Äî –¥–∞–≤–∏ —Ç—ã.", "–õ–æ–∂—å ‚Äî –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å.", "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ \u2260 –≤—ã–≥–æ–¥–Ω–æ–µ. –í—ã–±–∏—Ä–∞–π –≤—ã–≥–æ–¥—É." ];

function getRule() { const index = Math.floor(Math.random() * rules.length); document.getElementById("rule").textContent = rules[index]; localStorage.setItem("dailyRule", index); }

function loadRule() { const saved = localStorage.getItem("dailyRule"); if (saved) { document.getElementById("rule").textContent = rules[saved]; } else { getRule(); } }

// üìã –ó–∞–¥–∞—á–∏ function addTask() { const input = document.getElementById("taskInput"); const value = input.value.trim(); if (value) { const li = document.createElement("li"); li.textContent = value; li.onclick = () => { li.classList.toggle("done"); saveTasks(); }; document.getElementById("taskList").appendChild(li); input.value = ""; saveTasks(); } }

function saveTasks() { const tasks = Array.from(document.querySelectorAll("#taskList li")).map(li => ({ text: li.textContent, done: li.classList.contains("done") })); localStorage.setItem("tasks", JSON.stringify(tasks)); }

function loadTasks() { const data = localStorage.getItem("tasks"); if (data) { const tasks = JSON.parse(data); tasks.forEach(({ text, done }) => { const li = document.createElement("li"); li.textContent = text; if (done) li.classList.add("done"); li.onclick = () => { li.classList.toggle("done"); saveTasks(); }; document.getElementById("taskList").appendChild(li); }); } }

// ‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è function addReminder() { const time = document.getElementById("reminderTime").value; const text = document.getElementById("reminderText").value.trim(); if (!time || !text) return;

const reminders = JSON.parse(localStorage.getItem("reminders") || "[]"); reminders.push({ time, text }); localStorage.setItem("reminders", JSON.stringify(reminders)); renderReminders(); }

function renderReminders() { const list = document.getElementById("reminderList"); list.innerHTML = ""; const reminders = JSON.parse(localStorage.getItem("reminders") || "[]"); reminders.forEach((r, i) => { const li = document.createElement("li"); li.textContent = ${r.time} ‚Äî ${r.text}; const btn = document.createElement("button"); btn.textContent = "‚ùå"; btn.onclick = () => { reminders.splice(i, 1); localStorage.setItem("reminders", JSON.stringify(reminders)); renderReminders(); }; li.appendChild(btn); list.appendChild(li); }); }

function scheduleReminders() { const reminders = JSON.parse(localStorage.getItem("reminders") || "[]"); reminders.forEach(r => { const [h, m] = r.time.split(":").map(Number); const now = new Date(); const target = new Date(); target.setHours(h, m, 0, 0); if (target <= now) target.setDate(now.getDate() + 1); const delay = target - now;

setTimeout(() => {
  alert("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: " + r.text);
}, delay);

}); }

// üß† –ê—Ä—Ö–µ—Ç–∏–ø (—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è, –¥–∞–ª—å—à–µ –¥–æ—Ä–∞–±–æ—Ç–∞—é) const archetypes = [ "–•–∏—â–Ω–∏–∫", "–°—Ç—Ä–∞—Ç–µ–≥", "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä", "–û—Ä–∞–∫—É–ª", "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å" ];

function startTest() { const q = "–ö—Ç–æ —Ç—ã, –∫–æ–≥–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ—Ç—Ä–∏—Ç?"; const quiz = document.getElementById("quiz"); quiz.innerHTML = <p>${q}</p>; archetypes.forEach(type => { const btn = document.createElement("button"); btn.textContent = type; btn.onclick = () => { document.getElementById("result").innerHTML = –¢—ã ‚Äî <b>${type}</b>; localStorage.setItem("archetype", type); }; quiz.appendChild(btn); }); }

// üë• –û–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –¥—Ä. –ª–æ–≥–∏–∫–∞ ‚Äî –±—É–¥–µ—Ç –Ω–∏–∂–µ

// üîÅ –ó–∞–≥—Ä—É–∑–∫–∞ window.addEventListener("DOMContentLoaded", () => { loadRule(); loadTasks(); renderReminders(); scheduleReminders(); });

