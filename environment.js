// üë• –ë–ª–æ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –º–µ—Ç–∫–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ

function createPersonElement(name, status) {
  const li = document.createElement("li");
  li.innerHTML = `${name} ‚Äî <span class="${status}">${status.toUpperCase()}</span>`;

  // ‚ùå –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
  const delBtn = document.createElement("button");
  delBtn.textContent = "‚ùå";
  delBtn.style.marginLeft = "10px";
  delBtn.onclick = () => {
    li.remove();
    saveLog("–£–¥–∞–ª—ë–Ω —á–µ–ª–æ–≤–µ–∫: " + name);
    updatePeopleStorage();
  };
  li.appendChild(delBtn);

  // üè∑ –ú–µ—Ç–∫–∏
  const tags = ["+—Ä–µ—Å—É—Ä—Å", "-–±–∞–ª–ª–∞—Å—Ç", "—Ä–µ–ª–∏–≥–∏–æ–∑–µ–Ω", "—Å–ª–∞–±"];
  tags.forEach(tag => {
    const tagBtn = document.createElement("button");
    tagBtn.textContent = tag;
    tagBtn.style.marginLeft = "5px";
    tagBtn.onclick = () => {
      li.innerHTML = li.innerHTML.replace("</span>", ` ‚Äî ${tag}</span>`);
      saveLog(`–ú–µ—Ç–∫–∞ [${tag}] –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫: ${name}`);
      updatePeopleStorage();
    };
    li.appendChild(tagBtn);
  });

  return li;
}

function addPerson() {
  const name = document.getElementById("personName").value.trim();
  const status = document.getElementById("personStatus").value;

  if (!name) return;

  const li = createPersonElement(name, status);
  document.getElementById("peopleList").appendChild(li);
  document.getElementById("personName").value = "";
  saveLog(`–î–æ–±–∞–≤–ª–µ–Ω —á–µ–ª–æ–≤–µ–∫: ${name} (${status})`);
  updatePeopleStorage();
}

function updatePeopleStorage() {
  const list = Array.from(document.querySelectorAll("#peopleList li")).map(li => li.innerHTML);
  localStorage.setItem("people", JSON.stringify(list));
}

function loadPeople() {
  const saved = JSON.parse(localStorage.getItem("people") || "[]");
  saved.forEach(html => {
    const temp = document.createElement("div");
    temp.innerHTML = html;
    const text = temp.textContent;
    const name = text.split("‚Äî")[0].trim();
    const match = html.match(/class="(.*?)"/);
    const status = match ? match[1] : "yellow";
    const li = createPersonElement(name, status);
    li.innerHTML = html; // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π HTML —Å –º–µ—Ç–∫–∞–º–∏
    document.getElementById("peopleList").appendChild(li);
  });
}